# -*- coding: utf-8 -*-
"""Covid_Plot_Log_Growth.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19se4s_QwF3B8NRonp3Irehh5gYyHo4PQ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

fatalitiesurl = "https://raw.githubusercontent.com/J535D165/CoronaWatchNL/master/data/rivm_corona_in_nl_fatalities.csv"
hospitalurl = "https://raw.githubusercontent.com/J535D165/CoronaWatchNL/master/data/rivm_corona_in_nl_hosp.csv"
totalurl = "https://raw.githubusercontent.com/J535D165/CoronaWatchNL/master/data/rivm_corona_in_nl_daily.csv"

def read_data(url):
    
    # Read and preprocess data file
    df = pd.read_csv(url)

    df['Datum'] = pd.to_datetime(df['Datum'])

    df['Dag'] = np.arange(len(df))

    df = df.set_index('Datum')
    
    return (df)

def add_variables(df):
    #rolling avg
    RolAVG = 7 

    # New cases
    df['New_cases'] = df.Aantal.diff()

    # Groeifactor
    df['Growth_factor'] = df['New_cases'] / df['New_cases'].shift(1)    

    #EWM
    df['Total_EMA'] = pd.Series.ewm(df['Aantal'], span=RolAVG).mean()
    df['New_EMA'] = pd.Series.ewm(df['New_cases'], span=RolAVG).mean()
    
    return(df)

def get_df_name(df):
    name =[x for x in globals() if globals()[x] is df][0]+str("= ")+str(int(df['New_cases'][df.index[-1]]))+str("/")+str(df['Aantal'][df.index[-1]])
    return name

def create_logarithmic_growth_plot(df,df1,df2):
    # Setup Object Oriented plot because we re-use this function
    fig, ax = plt.subplots(figsize=(15,10))
    ax.set(xscale="log", yscale="log", )
    ax.set_xlabel("Totaal cases", fontsize=15)
    ax.set_ylabel("Nieuwe cases", fontsize=15)

    ax.grid(which='major', linewidth=1)
    ax.grid(which='minor', linewidth=0.1)

    ax.plot(df['Total_EMA'], df["New_EMA"],label = get_df_name(df))
    ax.plot(df1['Total_EMA'], df1["New_EMA"],label = get_df_name(df1))
    ax.plot(df2['Total_EMA'], df2["New_EMA"],label = get_df_name(df2))
    ax.legend()     
    return fig,ax

def plot_logarithmic_growth_daily(df,df1,df2):
    fig, ax = create_logarithmic_growth_plot(df,df1,df2)
    ax.set(title="Nieuwe cases tegen totaal cases (dagelijks)")

    fig.savefig("plots/exponential_growth_daily.png")

if __name__ == "__main__":

    fatalities = read_data(fatalitiesurl)
    fatalities = add_variables(fatalities)
    hospital = read_data(hospitalurl)
    hospital = add_variables(hospital)
    total = read_data(totalurl)
    total = add_variables(total)

    plot_logarithmic_growth_daily(fatalities,hospital,total)

